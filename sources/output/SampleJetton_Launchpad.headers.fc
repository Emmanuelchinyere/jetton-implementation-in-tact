;;
;; Header files for Launchpad
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $UploadJettonWalletData$_load
(slice, ((int, int, slice, int, slice, slice))) $UploadJettonWalletData$_load(slice sc_0) inline_ref;

;; $AdminExecute$_load
(slice, ((int))) $AdminExecute$_load(slice sc_0) inline;

;; $AdminUploadJettonWalletData$_store
builder $AdminUploadJettonWalletData$_store(builder build_0, (int, slice, int, slice, slice) v) inline;

;; $AdminUploadJettonWalletData$_store_cell
cell $AdminUploadJettonWalletData$_store_cell((int, slice, int, slice, slice) v) inline;

;; $Launchpad$_store
builder $Launchpad$_store(builder build_0, (int, slice, slice) v) inline;

;; $Launchpad$_load
(slice, ((int, slice, slice))) $Launchpad$_load(slice sc_0) inline;

;; $Launchpad$init$_load
(slice, ((slice, slice))) $Launchpad$init$_load(slice sc_0) inline;

;; $Round$init$_store
builder $Round$init$_store(builder build_0, (int, slice, slice) v) inline;

;; $Launchpad$_contract_init
(int, slice, slice) $Launchpad$_contract_init(slice $owner, slice $staking_contract) impure inline_ref;

;; $Launchpad$_contract_load
(int, slice, slice) $Launchpad$_contract_load() impure inline_ref;

;; $Launchpad$_contract_store
() $Launchpad$_contract_store((int, slice, slice) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Round$_init_child
(cell, cell) $Round$_init_child(cell sys', int $project_id, slice $ido_contract, slice $staking_contract) inline_ref;

;; $Launchpad$_fun_get_round_address
((int, slice, slice), slice) $Launchpad$_fun_get_round_address((int, slice, slice) $self, int $project_id) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_code_data(slice to, int value, int mode, int bounce, cell code, cell data) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $AdminUploadJettonWalletData$_constructor_funding_period_round_contract_jetton_wallet_convert_rate_upcoming_token_jetton_wallet_second_owner
((int, slice, int, slice, slice)) $AdminUploadJettonWalletData$_constructor_funding_period_round_contract_jetton_wallet_convert_rate_upcoming_token_jetton_wallet_second_owner(int funding_period, slice round_contract_jetton_wallet, int convert_rate, slice upcoming_token_jetton_wallet, slice second_owner) inline;
